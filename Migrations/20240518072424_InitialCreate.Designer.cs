// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using apilibraryapps.Data;

#nullable disable

namespace apilibraryapps.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240518072424_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("apilibraryapps.Models.Buku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("JenisBuku")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("jenis_buku");

                    b.Property<int>("LokasiRak")
                        .HasColumnType("integer")
                        .HasColumnName("lokasi_rak");

                    b.Property<string>("NamaBuku")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nama_buku");

                    b.Property<string>("Penerbit")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("penerbit");

                    b.Property<long>("StokBuku")
                        .HasColumnType("bigint")
                        .HasColumnName("stok_buku");

                    b.HasKey("Id");

                    b.HasIndex("LokasiRak");

                    b.ToTable("buku");
                });

            modelBuilder.Entity("apilibraryapps.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Deskripsi")
                        .HasColumnType("text")
                        .HasColumnName("deskripsi");

                    b.Property<string>("NamaRak")
                        .HasColumnType("text")
                        .HasColumnName("nama_rak");

                    b.HasKey("Id");

                    b.ToTable("inventori");
                });

            modelBuilder.Entity("apilibraryapps.Models.Mahasiswa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AktifFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("aktif_flag");

                    b.Property<string>("Jurusan")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("jurusan");

                    b.Property<string>("NamaMhs")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nama_mhs");

                    b.Property<string>("NimMhs")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nim_mhs");

                    b.HasKey("Id");

                    b.ToTable("mahasiswa");
                });

            modelBuilder.Entity("apilibraryapps.Models.TransaksiBuku", b =>
                {
                    b.Property<int>("IdBuku")
                        .HasColumnType("integer")
                        .HasColumnName("id_buku");

                    b.Property<int>("IdMhs")
                        .HasColumnType("integer")
                        .HasColumnName("id_mhs");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("JumlahPinjam")
                        .HasColumnType("integer")
                        .HasColumnName("jml_pinjam");

                    b.Property<int>("LamaPinjam")
                        .HasColumnType("integer")
                        .HasColumnName("lama_pinjam");

                    b.Property<string>("NoTransaksi")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("no_transaksi");

                    b.Property<string>("TglKembali")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tgl_kembali");

                    b.Property<string>("TglPinjam")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tgl_pinjam");

                    b.HasKey("IdBuku", "IdMhs");

                    b.HasIndex("IdMhs");

                    b.ToTable("transaksi_buku");
                });

            modelBuilder.Entity("apilibraryapps.Models.Buku", b =>
                {
                    b.HasOne("apilibraryapps.Models.Inventory", "Inventory")
                        .WithMany("Buku")
                        .HasForeignKey("LokasiRak")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("apilibraryapps.Models.TransaksiBuku", b =>
                {
                    b.HasOne("apilibraryapps.Models.Buku", "Buku")
                        .WithMany("TransaksiBukus")
                        .HasForeignKey("IdBuku")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apilibraryapps.Models.Mahasiswa", "Mahasiswa")
                        .WithMany("TransaksiBukus")
                        .HasForeignKey("IdMhs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buku");

                    b.Navigation("Mahasiswa");
                });

            modelBuilder.Entity("apilibraryapps.Models.Buku", b =>
                {
                    b.Navigation("TransaksiBukus");
                });

            modelBuilder.Entity("apilibraryapps.Models.Inventory", b =>
                {
                    b.Navigation("Buku");
                });

            modelBuilder.Entity("apilibraryapps.Models.Mahasiswa", b =>
                {
                    b.Navigation("TransaksiBukus");
                });
#pragma warning restore 612, 618
        }
    }
}
